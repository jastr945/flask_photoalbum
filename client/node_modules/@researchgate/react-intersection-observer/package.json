{
  "_args": [
    [
      {
        "raw": "@researchgate/react-intersection-observer",
        "scope": "@researchgate",
        "escapedName": "@researchgate%2freact-intersection-observer",
        "name": "@researchgate/react-intersection-observer",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/polina/projects/flask_photoalbum/client"
    ]
  ],
  "_from": "@researchgate/react-intersection-observer@latest",
  "_id": "@researchgate/react-intersection-observer@0.6.1",
  "_inCache": true,
  "_location": "/@researchgate/react-intersection-observer",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-intersection-observer_0.6.1_1523551921977_0.6688469334241722"
  },
  "_npmUser": {
    "name": "rendez",
    "email": "mail@luismerino.name"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@researchgate/react-intersection-observer",
    "scope": "@researchgate",
    "escapedName": "@researchgate%2freact-intersection-observer",
    "name": "@researchgate/react-intersection-observer",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@researchgate/react-intersection-observer/-/react-intersection-observer-0.6.1.tgz",
  "_shasum": "f98362ccb23450ce25a27e8d96a89cf987a15b73",
  "_shrinkwrap": null,
  "_spec": "@researchgate/react-intersection-observer",
  "_where": "/home/polina/projects/flask_photoalbum/client",
  "author": {
    "name": "Luis Merino",
    "email": "mail@luismerino.name"
  },
  "bugs": {
    "url": "https://github.com/researchgate/react-intersection-observer/issues"
  },
  "contributors": [
    {
      "name": "Luis Merino",
      "email": "mail@luismerino.name"
    }
  ],
  "dependencies": {
    "invariant": "^2.2.2",
    "prop-types": "^15.6.0"
  },
  "description": "React component for the Intersection Observer API",
  "devDependencies": {
    "@researchgate/babel-preset-rg": "^1.0.1",
    "@researchgate/eslint-config-rg-react": "^2.0.0",
    "@storybook/addon-actions": "^3.2.16",
    "@storybook/addon-options": "^3.2.16",
    "@storybook/react": "^3.2.16",
    "babel-cli": "^6.24.1",
    "babel-eslint": "^8.0.2",
    "babel-jest": "^21.0.0",
    "babel-polyfill": "^6.26.0",
    "conventional-github-releaser": "^2.0.0",
    "cross-env": "^5.1.1",
    "css-loader": "^0.28.4",
    "eslint": "^4.11.0",
    "eslint-config-prettier": "^2.8.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-prettier": "^2.3.0",
    "eslint-plugin-react": "^7.5.1",
    "husky": "^0.14.3",
    "intersection-observer": "^0.5.0",
    "jest": "^21.0.0",
    "lint-staged": "^6.0.0",
    "prettier": "^1.8.2",
    "raf": "^3.4.0",
    "raw-loader": "^1.0.0-beta.0",
    "react": "^16.1.1",
    "react-dom": "^16.1.1",
    "react-test-renderer": "^16.1.1",
    "rimraf": "^2.6.1",
    "standard-version": "^4.2.0",
    "storybook-readme": "^3.1.1",
    "style-loader": "^0.19.0",
    "typescript": "^2.6.2",
    "validate-commit-msg": "^2.14.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jXH94d1oeTk2FgGBibj93XBtPD5efGOJl6uBmmdKmLhTO4uBYuyL68ti9Lc9ul9gZyA9XJuCJSTCpy3nbpNswg==",
    "shasum": "f98362ccb23450ce25a27e8d96a89cf987a15b73",
    "tarball": "https://registry.npmjs.org/@researchgate/react-intersection-observer/-/react-intersection-observer-0.6.1.tgz",
    "fileCount": 13,
    "unpackedSize": 50521
  },
  "files": [
    "lib",
    "types/index.d.ts"
  ],
  "gitHead": "69e297f895188177fc8c5f9345ffb152e6e43866",
  "homepage": "https://github.com/researchgate/react-intersection-observer#readme",
  "jest": {
    "rootDir": "src",
    "testMatch": [
      "**/__tests__/**/*.spec.js"
    ],
    "setupFiles": [
      "raf/polyfill"
    ]
  },
  "keywords": [
    "Intersection",
    "Observer",
    "react",
    "component",
    "viewport",
    "visible",
    "invisible",
    "researchgate"
  ],
  "license": "MIT",
  "lint-staged": {
    "{src,docs/docs}/**/*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "lib/js/index.js",
  "maintainers": [
    {
      "name": "bashofmann",
      "email": "bashofmann@googlemail.com"
    },
    {
      "name": "danez",
      "email": "daniel@tschinder.de"
    },
    {
      "name": "haeusler",
      "email": "michael.haeusler@researchgate.net"
    },
    {
      "name": "rendez",
      "email": "mail@luismerino.name"
    },
    {
      "name": "sbekrin",
      "email": "sergey@bekrin.me"
    },
    {
      "name": "sevinf",
      "email": "sergey@tatarintsev.me"
    },
    {
      "name": "tobias.hornberger",
      "email": "tobias.hornberger@falsemirror.de"
    },
    {
      "name": "weaintplastic",
      "email": "info@weaintplastic.com"
    }
  ],
  "module": "lib/es/index.js",
  "name": "@researchgate/react-intersection-observer",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=15",
    "react-dom": ">=15"
  },
  "readme": "<p align=\"center\">\n  <img alt=\"React Intersection Observer\" src=\".github/logo.svg\" width=\"888\">\n</p>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/researchgate/react-intersection-observer\"><img alt=\"Build Status\" src=\"https://travis-ci.org/researchgate/react-intersection-observer.svg?branch=master\"></a>\n  <a href=\"https://codecov.io/gh/researchgate/react-intersection-observer\"><img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/researchgate/react-intersection-observer.svg\"></a>\n  <a href=\"https://greenkeeper.io/\"><img alt=\"Greenkeeper badge\" src=\"https://badges.greenkeeper.io/researchgate/react-intersection-observer.svg\"></a>\n  <a href=\"https://www.npmjs.com/package/@researchgate/react-intersection-observer\"><img alt=\"NPM version\" src=\"https://img.shields.io/npm/v/@researchgate/react-intersection-observer.svg\"></a>\n  <a href=\"https://github.com/prettier/prettier\"><img alt=\"styled with prettier\" src=\"https://img.shields.io/badge/styled_with-prettier-ff69b4.svg\"></a>\n</p>\n\n<br>\n\n> Bring ReactIntersectionObserver over today, your React children will love it!\n\n**React Intersection Observer** is a **React** component, acting as a wrapper for the **IntersectionObserver API**. It is fully declarative and takes care of all the imperative parts for you.\n\n**React Intersection Observer** is good at:\n\n* **reusing instances**: comparing the passed options\n* **performance**: chooses smartly when to re-render and when to re-observe\n* **being unopinionated**: how to handle visibility changes is left entirely up to the developer\n* **being intuitive**: looks like the Native API\n\n<br>\n\n<details>\n<summary><strong>Table of Contents</strong></summary>\n\n* [What does IntersectionObserver do?](#what-does-intersectionobserver-do)\n* [Getting started](#getting-started)\n  + [Installation](#installation)\n  + [Inside your codebase](#inside-your-codebase)\n* [Why ReactIntersectionObserver?](#why-reactintersectionobserver)\n  + [No bookkeeping](#no-bookkeeping)\n  + [No extra markup](#no-extra-markup)\n  + [Easy to adopt](#easy-to-adopt)\n* [Documentation](#documentation)\n* [Options](#options)\n* [Notes](#notes)\n* [Polyfill](#polyfill)\n* [IntersectionObserver's Browser Support](#intersectionobservers-browser-support)\n* [Contributing](#contributing)\n* [License](#license)\n</details>\n\n---\n\n## What does IntersectionObserver do?\n\n> IntersectionObservers calculate how much of a target element overlaps (or \"intersects with\") the visible portion of a page, also known as the browser's \"viewport\":\n>\n> \\- [Dan Callahan](https://hacks.mozilla.org/2017/08/intersection-observer-comes-to-firefox/)&nbsp;&middot;&nbsp;<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">\n<img id=\"licensebutton_slim\" alt=\"Creative Commons License\" src=\"https://i.creativecommons.org/l/by-sa/3.0/80x15.png\" style=\"margin-right:10px;margin-bottom:4px; border: 0;\"></a>\n\n![Graphic example](https://hacks.mozilla.org/files/2017/08/Blank-Diagram-Page-1.png)\n\n## Getting started\n\n```shell\nnpm install --save @researchgate/react-intersection-observer\n```\n\nOptionally add the polyfill and make sure it's required on your dependendencies for unsupporting browsers:\n\n```shell\nnpm install --save intersection-observer\n```\n\nUsage:\n\n```jsx\nimport React from 'react';\nimport 'intersection-observer'; // optional polyfill\nimport Observer from '@researchgate/react-intersection-observer';\n\nclass ExampleComponent extends React.Component {\n    handleIntersection(event) {\n        console.log(event.isIntersecting);\n    }\n\n    render() {\n        const options = {\n            onChange: this.handleIntersection,\n            root: \"#scrolling-container\",\n            rootMargin: \"0% 0% -25%\"\n        };\n\n        return (\n            <div id=\"scrolling-container\" style={{ overflow: 'scroll', height: 100 }}>\n                <Observer {...options}>\n                    <div>\n                        I am the target element\n                    </div>\n                </Observer>\n            </div>\n        );\n    }\n}\n```\n\n## Why ReactIntersectionObserver?\n\nThe motivation is to provide the easiest possible solution for observing elements that enter the viewport on your **React** codebase. It's fully declarative and all complexity is abstracted away, focusing on reusability, and low memory consumption.\n\n### No bookkeeping\n\nIt's built with compatibility in mind, adhering 100% to the [native API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Intersection_observer_options) implementation and DSL, but takes care of all the bookkeeping work for you.\n\nInstances and nodes are managed internally so that any changes to the passed options or tree root reconciliation cleans up and re-observes nodes on-demand to avoid any unexpected memory leaks.\n\n### No extra markup\n\nReactIntersectionObserver does not create any extra DOM elements, it attaches to the only child you'll provide to it. Internally it warns you if attaching a `ref` to it fails - common mistake when using a stateless component in React 15 - and will invoke any existing `ref` callback upon the passed child element.\n\n### Easy to adopt\n\nWhen using ReactIntersectionObserver the only required prop is the `onChange` function. Any changes to the visibility of the element will invoke this callback, just like in the [native API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Targeting_an_element_to_be_observed) - you’ll receive one `IntersectionObserverEntry` argument per change. This gives you an ideal and flexible base to build upon.\n\nSome of the things you may want to use ReactIntersectionObserver for:\n\n* Determining advertisement impressions\n* Lazy loading - Images, or anything that will enter the viewport\n* Occlusion culling - Don't render an object until is close to the viewport edges\n* [Sentinel Scrolling - Infinite scroller with a recycled Sentinel](https://github.com/researchgate/react-intersection-list)\n\n## Documentation\n\n### Demos\n\nFind multiple examples and usage guidelines under: [https://researchgate.github.io/react-intersection-observer/](https://researchgate.github.io/react-intersection-observer/)\n\n[![demo](https://github.com/researchgate/react-intersection-observer/blob/master/.github/demo.gif?raw=true)](https://researchgate.github.io/react-intersection-observer/)\n\n### Recipes\n\nRecipes are useful code snippets solutions to common problems, for example, how to use ReactIntersectionObserver within a [Higher Order Component](https://researchgate.github.io/react-intersection-observer/?selectedKind=Recipes&selectedStory=Higher%20Order%20Component).\n\nDiscover more recipes in our [examples section](docs/README.md).\n\n### Options\n\n**root**: `HTMLElement|string` | default `window object`\n\nThe element or selector string that is used as the viewport for checking visibility of the target.\n\n**rootMargin**: `string` | default `0px 0px 0px 0px`\n\nMargin around the root. Specify using units _px_ or _%_ (top, right, bottom left). Can contain negative values.\n\n**threshold**: `number|Array<number>` | default: `0`\n\nIndicates at what percentage of the target's visibility the observer's callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1].\n\n**onlyOnce**: `boolean` | default: `false`\n\nWhen true indicate that events fire only until the element is intersecting. Requires `IntersectionObserverEntry`'s object to contain `isIntersecting` in its prototype.\n\n**disabled**: `boolean` | default: `false`\n\nControls whether the element should stop being observed by its IntersectionObserver instance. Useful for temporarily disabling the observing mechanism and restoring it later.\n\n**onChange** (required): `(entry: IntersectionObserverEntry) => void`\n\nFunction that will be invoked whenever an observer's callback contains this target in its changes.\n\n**children** (required): `React.Element<*>`\n\nSingle React component or element that is used as the target (observable).\n\n### Notes\n\n* According to the spec, an initial event is being fired when starting to observe a non-intersecting element as well.\n  * _Edge's implementation seems to [miss the initial event](https://github.com/w3c/IntersectionObserver/issues/222#issuecomment-311539591), although Edge 16 behavior aligns with the spec._\n* Changes happen asynchronously, similar to the way `requestIdleCallback` works.\n* Although you can consider callbacks immediate - always below 1 second - you can also get an immediate response on an element's visibility with `observer.takeRecords()`.\n* The primitives _Map_, _Set_, and _Symbol_ are required and won't be transpiled by default. Consider using a polyfill for browsers lacking ES2015 support. If you're using babel, include `\"babel-polyfill\"` somewhere to your codebase.\n\n## Polyfill\n\nWhen needing the full spec's support, we highly recommend using the [IntersectionObserver polyfill](https://github.com/w3c/IntersectionObserver/tree/master/polyfill).\n\n### Caveats\n\n#### Ealier Spec\n\nEarlier preview versions of [Edge](https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12156111/) and prior to version 58 of [Chrome](https://bugs.chromium.org/p/chromium/issues/detail?id=713819#c8), the support for `isIntersecting` was lacking. This property was added to the spec later and both teams where unable to implement it earlier.\n\nIf you are using the prop `onlyOnce` or you need this field within your `IntersectionObserverEntry` instances, make sure to [require the version ^0.4.0](https://github.com/WICG/IntersectionObserver/commit/d4a699cc7a2d12e4e67cd6d1e748bed8bb6e3d8c).\n\n#### Performance issues\n\nAs the above-mentioned polyfill doesn't perform callback invocation [asynchronously](https://github.com/WICG/IntersectionObserver/issues/225), you might want to decorate your `onChange` callback with a `requestIdleCallback` or `setTimeout` call to avoid a potential performance degradation:\n\n```js\nonChange = (entry) => requestIdleCallback(() => this.handleChange(entry));\n```\n\n## [**IntersectionObserver**'s Browser Support](https://platform-status.mozilla.org/)\n\n### Out of the box\n\n<table>\n    <tr>\n        <td>Chrome</td>\n        <td>51 <sup>[1]</sup></td>\n    </tr>\n    <tr>\n        <td>Firefox (Gecko)</td>\n        <td>55 <sup>[2]</sup></td>\n    </tr>\n    <tr>\n        <td>MS Edge</td>\n        <td>15</td>\n    </tr>\n    <tr>\n        <td>Internet Explorer</td>\n        <td>Not supported</td>\n    </tr>\n    <tr>\n        <td>Opera <sup>[1]</sup></td>\n        <td>38</td>\n    </tr>\n    <tr>\n        <td>Safari</td>\n        <td>Safari Technology Preview</td>\n    </tr>\n    <tr>\n        <td>Chrome for Android</td>\n        <td>59</td>\n    </tr>\n    <tr>\n        <td>Android Browser</td>\n        <td>56</td>\n    </tr>\n    <tr>\n        <td>Opera Mobile</td>\n        <td>37</td>\n    </tr>\n</table>\n\n* [1] [Reportedly available](https://www.chromestatus.com/features/5695342691483648), it didn't trigger the events on initial load and lacks `isIntersecting` until later versions.\n* [2] This feature was implemented in Gecko 53.0 (Firefox 53.0 / Thunderbird 53.0 / SeaMonkey 2.50) behind the preference `dom.IntersectionObserver.enabled`.\n\n### Using polyfill\n\n<table>\n  <tr>\n    <td>Safari</td>\n    <td>6+</td>\n  </tr>\n  <tr>\n    <td>Internet Explorer</td>\n    <td>7+</td>\n  </tr>\n  <tr>\n    <td>Android</td>\n    <td>4.4+</td>\n  </tr>\n</table>\n\n## Contributing\n\nWe'd love your help on creating React Intersection Observer!\n\nBefore you do, please read our [Code of Conduct](.github/CODE_OF_CONDUCT.md) so you know what we expect when you contribute to our projects.\n\nOur [Contributing Guide](.github/CONTRIBUTING.md) tells you about our development process and what we're looking for, gives you instructions on how to issue bugs and suggest features, and explains how you can build and test your changes.\n\n**Haven't contributed to an open source project before?** No problem! [Contributing Guide](.github/CONTRIBUTING.md) has you covered as well.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/researchgate/react-intersection-observer.git"
  },
  "scripts": {
    "build": "yarn build:js && yarn build:es",
    "build:es": "cross-env BABEL_ENV=production BABEL_OUTPUT=esm babel src --out-dir lib/es --ignore __tests__ --copy-files",
    "build:js": "cross-env BABEL_ENV=production BABEL_OUTPUT=cjs babel src --out-dir lib/js --ignore __tests__ --copy-files",
    "build:storybook": "build-storybook --output-dir docs",
    "clear": "rimraf ./lib",
    "commitmsg": "validate-commit-msg",
    "coverage": "yarn test -- --coverage",
    "create-github-release": "conventional-github-releaser -p angular",
    "format": "eslint --fix {src,docs/docs}/**/*.js",
    "lint": "eslint {src,docs/docs}/. && tsc --project types",
    "precommit": "yarn lint-staged && yarn test",
    "prepare": "yarn clear && yarn build",
    "prepublishOnly": "yarn test",
    "release": "standard-version",
    "storybook": "start-storybook -p 9001 -c .storybook",
    "test": "jest"
  },
  "types": "types/index.d.ts",
  "version": "0.6.1"
}
